<?php



/**
 * This class defines the structure of the 'expositor_feria' table.
 *
 *
 * This class was autogenerated by Propel 1.6.2-dev on:
 *
 * Sat Oct  4 21:39:06 2014
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    propel.generator.lib.model.map
 */
class ExpositorFeriaTableMap extends TableMap
{

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.ExpositorFeriaTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
		// attributes
		$this->setName('expositor_feria');
		$this->setPhpName('ExpositorFeria');
		$this->setClassname('ExpositorFeria');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(true);
		$this->setPrimaryKeyMethodInfo('expositor_feria_id_seq');
		// columns
		$this->addPrimaryKey('ID', 'Id', 'BIGINT', true, null, null);
		$this->addForeignKey('ID_FERIA', 'IdFeria', 'INTEGER', 'feria', 'ID', false, null, null);
		$this->addForeignKey('ID_EXPOSITOR', 'IdExpositor', 'INTEGER', 'expositor', 'ID', false, null, null);
		$this->addColumn('NOMBE_EMPRESA', 'NombeEmpresa', 'VARCHAR', false, 255, null);
		$this->addColumn('NOMBRE_DIRECTOR', 'NombreDirector', 'VARCHAR', false, 255, null);
		$this->addColumn('NOMBRE_EJECUTIVO_FERIA', 'NombreEjecutivoFeria', 'VARCHAR', false, 255, null);
		$this->addColumn('DIRECCION', 'Direccion', 'VARCHAR', false, 255, null);
		$this->addColumn('CIUDAD', 'Ciudad', 'VARCHAR', false, 255, null);
		$this->addForeignKey('ID_PAIS', 'IdPais', 'INTEGER', 'pais', 'ID', false, null, null);
		$this->addColumn('TELEFONO_LOCAL', 'TelefonoLocal', 'VARCHAR', false, 255, null);
		$this->addColumn('TELEFONO_CELULAR', 'TelefonoCelular', 'VARCHAR', false, 255, null);
		$this->addColumn('FAX', 'Fax', 'VARCHAR', false, 255, null);
		$this->addColumn('EMAIL', 'Email', 'VARCHAR', false, 255, null);
		$this->addColumn('SITIO_WEB', 'SitioWeb', 'VARCHAR', false, 255, null);
		$this->addColumn('TIPO_EXPOSITOR', 'TipoExpositor', 'VARCHAR', false, 255, null);
		$this->addColumn('OTRO_TIPO_EXPOSITOR', 'OtroTipoExpositor', 'VARCHAR', false, 255, null);
		$this->addColumn('NUMERO_STAND', 'NumeroStand', 'INTEGER', false, null, null);
		$this->addColumn('COSTO_STAND', 'CostoStand', 'DECIMAL', false, null, null);
		$this->addColumn('METROS_STAND', 'MetrosStand', 'INTEGER', false, null, null);
		$this->addColumn('OTRO_LINEA_EDITORIAL', 'OtroLineaEditorial', 'VARCHAR', false, 255, null);
		$this->addColumn('LIBRO_MAS_VENDIDO', 'LibroMasVendido', 'VARCHAR', false, 255, null);
		$this->addColumn('COSTO_LIBRO', 'CostoLibro', 'DECIMAL', false, null, null);
		$this->addColumn('CANTIDAD_LIBRO_VENDIDO', 'CantidadLibroVendido', 'INTEGER', false, null, null);
		$this->addColumn('OBSERVACIONES', 'Observaciones', 'LONGVARCHAR', false, null, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
		$this->addRelation('Feria', 'Feria', RelationMap::MANY_TO_ONE, array('id_feria' => 'id', ), null, null);
		$this->addRelation('Expositor', 'Expositor', RelationMap::MANY_TO_ONE, array('id_expositor' => 'id', ), null, null);
		$this->addRelation('Pais', 'Pais', RelationMap::MANY_TO_ONE, array('id_pais' => 'id', ), null, null);
		$this->addRelation('LineaEditorialExposiorFeria', 'LineaEditorialExposiorFeria', RelationMap::ONE_TO_MANY, array('id' => 'id_expositor_feria', ), null, null, 'LineaEditorialExposiorFerias');
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // ExpositorFeriaTableMap
