<?php



/**
 * This class defines the structure of the 'actividad' table.
 *
 *
 * This class was autogenerated by Propel 1.6.2-dev on:
 *
 * Fri May  1 16:52:43 2015
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    propel.generator.lib.model.map
 */
class ActividadTableMap extends TableMap
{

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.ActividadTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
		// attributes
		$this->setName('actividad');
		$this->setPhpName('Actividad');
		$this->setClassname('Actividad');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(true);
		$this->setPrimaryKeyMethodInfo('actividad_id_seq');
		// columns
		$this->addPrimaryKey('ID', 'Id', 'BIGINT', true, null, null);
		$this->addColumn('FECHA_SUGERIDA', 'FechaSugerida', 'DATE', false, null, null);
		$this->addColumn('HORA', 'Hora', 'TIMESTAMP', false, null, null);
		$this->addForeignKey('ID_FERIA', 'IdFeria', 'INTEGER', 'feria', 'ID', false, null, null);
		$this->addForeignKey('ID_USUARIO', 'IdUsuario', 'INTEGER', 'usuario', 'ID', false, null, null);
		$this->addColumn('STAND_NUMERO', 'StandNumero', 'INTEGER', false, null, null);
		$this->addColumn('NOMBRE_EMPRESA', 'NombreEmpresa', 'VARCHAR', false, 255, null);
		$this->addColumn('DIRECCION', 'Direccion', 'VARCHAR', false, 255, null);
		$this->addColumn('NOMBRE_SOLICITANTE', 'NombreSolicitante', 'VARCHAR', false, 255, null);
		$this->addColumn('NOMBRE_REPRESENTANTE', 'NombreRepresentante', 'VARCHAR', false, 255, null);
		$this->addColumn('TELEFONO_LOCAL', 'TelefonoLocal', 'VARCHAR', false, 255, null);
		$this->addColumn('TELEFONO_CELULAR', 'TelefonoCelular', 'VARCHAR', false, 255, null);
		$this->addColumn('FAX', 'Fax', 'VARCHAR', false, 255, null);
		$this->addColumn('EMAIL', 'Email', 'VARCHAR', false, 255, null);
		$this->addForeignKey('ID_TIPO_ACTIVIDAD', 'IdTipoActividad', 'INTEGER', 'tipo_actividad', 'ID', false, null, null);
		$this->addColumn('TITULO', 'Titulo', 'VARCHAR', false, 255, null);
		$this->addColumn('AUTOR', 'Autor', 'VARCHAR', false, 255, null);
		$this->addColumn('EDITORIAL', 'Editorial', 'VARCHAR', false, 255, null);
		$this->addColumn('DESCRIPCION_ACTIVIDAD', 'DescripcionActividad', 'LONGVARCHAR', false, null, null);
		$this->addColumn('PRESENTE_AUTOR', 'PresenteAutor', 'BOOLEAN', false, null, null);
		$this->addColumn('PUBLICO_DIRIGIDO', 'PublicoDirigido', 'VARCHAR', false, 255, null);
		$this->addColumn('NUMERO_PONENTES', 'NumeroPonentes', 'VARCHAR', false, 255, null);
		$this->addColumn('ACTIVIDAD_CERRADA', 'ActividadCerrada', 'BOOLEAN', false, null, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
		$this->addRelation('Feria', 'Feria', RelationMap::MANY_TO_ONE, array('id_feria' => 'id', ), 'CASCADE', null);
		$this->addRelation('Usuario', 'Usuario', RelationMap::MANY_TO_ONE, array('id_usuario' => 'id', ), 'CASCADE', null);
		$this->addRelation('TipoActividad', 'TipoActividad', RelationMap::MANY_TO_ONE, array('id_tipo_actividad' => 'id', ), 'CASCADE', null);
		$this->addRelation('ActividadFinalizada', 'ActividadFinalizada', RelationMap::ONE_TO_MANY, array('id' => 'id_actividad', ), 'CASCADE', null, 'ActividadFinalizadas');
		$this->addRelation('ActividadTipoActividad', 'ActividadTipoActividad', RelationMap::ONE_TO_MANY, array('id' => 'id_actividad', ), 'CASCADE', null, 'ActividadTipoActividads');
		$this->addRelation('IncumplmientoActividadFinalizada', 'IncumplmientoActividadFinalizada', RelationMap::ONE_TO_MANY, array('id' => 'id_actividad', ), 'CASCADE', null, 'IncumplmientoActividadFinalizadas');
		$this->addRelation('PonenteActividad', 'PonenteActividad', RelationMap::ONE_TO_MANY, array('id' => 'id_actividad', ), 'CASCADE', null, 'PonenteActividads');
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // ActividadTableMap
